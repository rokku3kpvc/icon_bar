# –ø–∏—Å–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ –∏ –µ–≥–æ ID |
# —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ |
# –Ω–∞ –∫–∞–∫—É—é —Å—É–º–º—É |
# —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –∑–∞–∫–∞–∑ |
# —Å—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ |
# –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Å–∫–æ–∫ –±—ã–ª–æ –ø—Ä–æ–¥–∞–Ω–æ (–ø–∏—Å–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ 0, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é) |
# —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ —Å–æ–∑–¥–∞–≤–∞–ª –æ—Ç—á–µ—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é |
# –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 00:00 —Å—É–±–±–æ—Ç—ã –¥–æ 23:59 –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è. –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—É–±–±–æ—Ç—É |
#
#     # icon_bar=# SELECT COUNT(*) AS count_all, "products"."name" AS products_name FROM "products" INNER JOIN "order_items" ON
#     # "products"."id" = "order_items"."product_id" WHERE "order_items"."order_id" IN (1,2,3,4,5,7,8,10) GROUP BY "products"."name";
#     #  count_all |     products_name
#     # -----------+------------------------
#     #          1 | üå∂ –¢–∞–±–∞—Å–∫–æ –®–æ—Ç
#     #          2 | ü•É –õ–æ–Ω–≥ –ê–π–ª–µ–Ω–¥
#     #          1 | üçã –ì—Ä–µ–π–ø—Ñ—Ä—É—Ç —Å–ø–ª—ç—à
#     #          1 | üç≠ –ö–∞—Ä–∞–º–µ–ª—å–Ω–æ–µ –Ø–±–ª–æ–∫–æ
#     #          1 | ü•í –î–∂–∏–Ω –¢–æ–Ω–∏–∫ —Å –û–≥—É—Ä—Ü–æ–º
#     #          3 | ü•í –û–≥—É—Ä–µ—á–Ω–∞—è
#     #          1 | üçì –Ø–≥–æ–¥–Ω–∞—è
#     #          1 | üç∂ –í–æ–¥–∫–∞
#     #          2 | üçã –õ–∏–º–æ–Ω—á–µ–ª–æ
#     #          1 | üç´ –®–æ–∫–æ–ª–∞–¥–Ω–∞—è
#     #
#     #     #icon_bar=# SELECT COUNT(*) AS count_all, "users"."first_name" AS first_name FROM "orders" LEFT OUTER JOIN "users"
#     #     # ON "users"."id" = "orders"."user_id" WHERE "orders"."state" = 'confirmed' GROUP BY "users"."first_name";
#     #     #  count_all |   first_name
#     #     # -----------+----------------
#     #     #          1 | Adelina
#     #     #          1 | Elvine
#     #     #          2 | Ni
#     #     #          2 | pridumaisam.og
#     #     #          1 | –î—Ä–µ–π–∫
#     #     #          1 | –ï–≥–æ—Ä
#     #     # (6 —Å—Ç—Ä–æ–∫)
# TODO: –ø–∏—Å—Ç–∞—å –æ—Ç—á–µ—Ç—ã –≤ –ë–î –∏ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –∏—Ö –æ—Ç—Ç—É–¥–∞
# TODO: –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º—É—é –ø—Ä–æ–¥–∞–≤–∞–µ–º—É—é –ø–æ–∑–∏—Ü–∏—é
class OrderReport
  attr_reader :items

  def initialize
    @from = Utils::Calendar.saturday
    # @from = Time.zone.now - 5.days
    @till = (@from + 1.day).end_of_day
    # @till = Time.zone.now + 1.day
    @items = OrderQuery.new(from: @from, till: @till).execute
  end

  def generate
    total_count = items.size # 8
    total_price = items.sum(:total_price) # 3750
    average_price = items.average(:total_price).to_i # 468
    max_price = items.maximum(:total_price) # 1000

    text_report = "üìÜ –û—Ç—á—ë—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö\n\n"
    text_report += "‚è∞ –ü–µ—Ä–∏–æ–¥: __#{format_time(@from)} - #{format_time(@till)}__\n\n"
    text_report += "üí™üèª –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ: #{total_count}\n"
    text_report += "üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤: #{total_price}‚ÇΩ\n"
    text_report += "üíµ –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: #{average_price}‚ÇΩ\n"
    text_report += "ü§ë –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: #{max_price}‚ÇΩ\n\n"
    text_report += "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–∑–∏—Ü–∏—è–º:\n#{products_sales_chart}\n"
    text_report += "üë®üèº‚Äçüíª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:\n#{users_sales_chart}\n"

    text_report
  end

  private

  def format_time(time)
    time.strftime('%d-%m-%Y %H:%M:%S')
  end

  def products_sales_chart
    item_ids = []
    items.each { |i| item_ids << i.id }

    return '' if item_ids.empty?

    # query =  'SELECT COUNT(*) AS count_all, products.name FROM products '
    # query += 'INNER JOIN order_items ON products.id = order_items.product_id '
    # query += "WHERE order_items.order_id IN (#{item_ids.join(',')}) GROUP BY products.name ORDER BY count_all DESC;"
    query =  'SELECT products.name, categories.name, COUNT(*) AS count_all FROM products '
    query += 'INNER JOIN order_items ON products.id = order_items.product_id '
    query += 'LEFT OUTER JOIN categories ON categories.id = products.category_id '
    query += 'LEFT OUTER JOIN orders ON orders.id = order_items.order_id '
    query += "WHERE order_items.order_id IN (#{item_ids.join(',')}) "
    query += 'GROUP BY products.name, categories.name ORDER BY count_all DESC;'

    # .map { |v| "#{v.second} - #{v.first} —à—Ç.\n" }
    ActiveRecord::Base.connection.execute(query)
                      .values
                      .map { |v| "#{v.first} (__#{v.second}__) - **#{v.third} —à—Ç.**\n" }
                      .join
  end

  def users_sales_chart
    query =  'SELECT COUNT(*) AS count_all, users.first_name FROM orders '
    query += 'LEFT OUTER JOIN users ON users.id = orders.user_id '
    query += "WHERE orders.state = 'confirmed' AND orders.updated_at BETWEEN '#{format_time(@from)}' AND '#{format_time(@till)}' "
    query += 'GROUP BY users.first_name ORDER BY count_all DESC;'

    ActiveRecord::Base.connection.execute(query)
                      .values
                      .map { |v| "[#{v.second}](tg://user?id=#{v.first}) - #{v.first}\n" }
                      .join
  end
end
